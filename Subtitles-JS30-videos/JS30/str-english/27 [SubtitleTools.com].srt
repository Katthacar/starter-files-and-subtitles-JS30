1
00:00:00,000 --> 00:00:00,033
Edited at https://subtitletools.com

2
00:00:01,447 --> 00:00:04,224
♪ [music] ♪

3
00:00:07,074 --> 00:00:11,460
Today we're going to learn how to do click
and drag from scratch.

4
00:00:11,460 --> 00:00:15,510
This is an effect that I saw on this
website Hover States. I scroll down to the

5
00:00:15,510 --> 00:00:19,200
bottom here and I noticed that
you can scroll this if you want,

6
00:00:19,200 --> 00:00:22,600
it's just a horizontally scrolling div,
which is kind of cool because it works

7
00:00:22,600 --> 00:00:27,930
without Javascript. However, you can also
take your cursor, click and drag as you

8
00:00:27,930 --> 00:00:30,620
want to go through it and I thought that
was kind of a cool effect.

9
00:00:30,620 --> 00:00:35,760
So, that's what I would like to do here is
when you click, drag your mouse and go

10
00:00:35,760 --> 00:00:41,310
somewhere, we want it to sort of come
along with it and this whole mouse event

11
00:00:41,310 --> 00:00:44,130
and mouse positioning stuff, I find it to
be a little bit complicated,

12
00:00:44,130 --> 00:00:48,620
so I thought that this would be a really
nice exercise to get us comfortable with

13
00:00:48,620 --> 00:00:52,480
what's going on here. So, pretty simple,
what we've got going on here,

14
00:00:52,480 --> 00:00:57,420
we've got our style that's CSS, I've added
some sort of fun CSS to it,

15
00:00:57,420 --> 00:01:02,340
like when you click it, we add a class of
active and it will bring it up a little

16
00:01:02,340 --> 00:01:10,590
bit. And then I also used this rotate y
and a perspective, so that when you move

17
00:01:10,590 --> 00:01:14,820
it, you see how 17 is "oh, I can barely
see it, oh, now it's totally looking at

18
00:01:14,820 --> 00:01:18,980
us." Just some fun stuff, it has nothing
to do with it other than it looks pretty.

19
00:01:18,980 --> 00:01:24,660
So, let's go down to our script here. And
really what we want to be doing here is

20
00:01:24,660 --> 00:01:29,970
selecting the items, which is this white
box right here and then we're going to be

21
00:01:29,970 --> 00:01:34,820
listening for a number of different
events. So, when I first click down,

22
00:01:34,820 --> 00:01:38,480
we're gonna add a class of active and
we're gonna figure out where did I click

23
00:01:38,480 --> 00:01:42,950
down. Then when I move my mouse
either to the left or to the right,

24
00:01:42,950 --> 00:01:49,790
we're gonna figure out okay, let's say if
I click right here. This is 500 px and if

25
00:01:49,790 --> 00:01:55,340
I scroll to the left, 20 px, we know that
we should scroll the div 20 pixels.

26
00:01:55,340 --> 00:01:58,840
If I scroll to the right 20 pixels, we
know that we should scroll the div 20

27
00:01:58,840 --> 00:02:02,910
pixels that way. And that's really how
it's going to work, we're just going to

28
00:02:02,910 --> 00:02:07,650
anchor it down as soon as we click and
then depending on how far either way we

29
00:02:07,650 --> 00:02:11,760
scroll, that's how much we're going to be
scrolling the div or we can do it a

30
00:02:11,760 --> 00:02:15,600
multiple of that, if you'd like for the
scrolling to go a little bit bigger.

31
00:02:15,600 --> 00:02:18,870
It's just a combination of mouse down,
mouse leave, mouse out,

32
00:02:18,870 --> 00:02:23,830
up and mouse move. So, let's first go
ahead and grab the sliders so we say const

33
00:02:23,830 --> 00:02:28,100
sliders equals document.query
selector. We are going to look for the

34
00:02:28,100 --> 00:02:32,850
item, that's the white div that surrounds
everything. And then we need a couple of

35
00:02:32,850 --> 00:02:35,570
variables, they're all gonna be let
because they're gonna be updated.

36
00:02:35,570 --> 00:02:39,390
So we're going to say let is down, to
build a false. That's gonna be our flag

37
00:02:39,390 --> 00:02:43,550
variable, that's either gonna be true or
false, depending on if I'm clicking or if

38
00:02:43,550 --> 00:02:48,700
I'm not. And then we also need one
called start x and scroll left, so we say

39
00:02:48,700 --> 00:02:55,800
let start x and let scroll left. You'll
notice how I'm not assigning any values to

40
00:02:55,800 --> 00:02:59,410
them, because that's gonna be happening in
our events. And we'll understand exactly

41
00:02:59,410 --> 00:03:04,900
what these are in just a second. Then what
we need to do is attach a whole bunch of

42
00:03:04,900 --> 00:03:08,630
different listeners, so we're gonna be
working with mouse down,

43
00:03:08,630 --> 00:03:13,020
mouse leave, mouse up and mouse move.
And I've paced these in here.

44
00:03:13,020 --> 00:03:17,800
And we're gonna listen for an event on
each of them, so we're just gonna say

45
00:03:17,800 --> 00:03:29,280
slider.add event listener. And you can
farm these off to separate functions.

46
00:03:29,280 --> 00:03:32,800
I'm gonna do them in line just because
right now I think it's important that we

47
00:03:32,800 --> 00:03:36,470
attach the code that is happening
directly to the event. However,

48
00:03:36,470 --> 00:03:39,730
once you're done it would be great to
refactor those out into separate functions

49
00:03:39,730 --> 00:03:42,970
and then just pass them into your event
listener, like we've been doing with a lot

50
00:03:42,970 --> 00:03:47,960
of our videos so far. We've got mouse down
mouse leave, mouse up and mouse move.

51
00:03:47,960 --> 00:03:53,960
So first let's handle the is down that's
happening. So when someone mouses down,

52
00:03:53,960 --> 00:03:59,850
we're gonna take this is down variable,
set it to true. When someone leaves,

53
00:03:59,850 --> 00:04:05,150
so if I'm dragging here, and then
I leave this thing and come back,

54
00:04:05,150 --> 00:04:08,930
it shouldn't work because what happens is
someone leaves, they come back,

55
00:04:08,930 --> 00:04:12,350
they let go and then they come back here
and it's still in the down state,

56
00:04:12,350 --> 00:04:20,750
so what we need to then do is to take this
is down and set that to be false.

57
00:04:20,750 --> 00:04:25,030
When someone mouses up, we want
to set that to be false as well.

58
00:04:25,030 --> 00:04:29,830
And then in mouse move, that's where all
of our magic is going to happen,

59
00:04:29,830 --> 00:04:36,410
so let's just inside of that, console log
is down. And then we're gonna console log

60
00:04:36,410 --> 00:04:40,490
do work. Open that up, open up your
console, I want to see what's going on

61
00:04:40,490 --> 00:04:46,140
here. And you see like, I'm console
logging a lot here and I haven't even

62
00:04:46,140 --> 00:04:52,390
clicked anything. This console logging
shouldn't show anything at all unless I'm

63
00:04:52,390 --> 00:04:55,980
actually mouse down. And if I click it
and mouse around me says true,

64
00:04:55,980 --> 00:05:00,030
true, true, I let go, false, false, false.
So what we want to do first thing here is

65
00:05:00,030 --> 00:05:05,850
in our mouse move, we'll say if is not
down, we are just going to return.

66
00:05:05,850 --> 00:05:10,890
And what that will do is stop the function
from running and then this console log is

67
00:05:10,890 --> 00:05:15,880
down and do work won't get logged unless
you're clicked in the click state.

68
00:05:15,880 --> 00:05:20,940
Here we go, let go, let me clear this out.
See I'm moving around,

69
00:05:20,940 --> 00:05:24,700
nothing, nothing, nothing? Click down,
move around, it starts to work.

70
00:05:24,700 --> 00:05:30,559
Let go, there's no updated. And we could
console.log, if you change that to

71
00:05:30,559 --> 00:05:34,380
console.count and just to see how many
times that happens. None, none, none,

72
00:05:34,380 --> 00:05:39,130
drag, drag, drag, good. Then it stops,
then it goes again. Good,

73
00:05:39,130 --> 00:05:43,800
so we have that mouse down. Next thing I
want to do is we'll take the slider.

74
00:05:43,800 --> 00:05:47,020
When you mouse down. We're
gonna take slider.add event listener.

75
00:05:47,020 --> 00:05:55,080
Nope. We'll take the slider, class
list.add, active, then we'll also do that

76
00:05:55,080 --> 00:06:02,170
the opposite when someone leaves, so
remove, and then once my mouse is up,

77
00:06:02,170 --> 00:06:06,725
it'll also remove class of act, good.
So now when you click it,

78
00:06:06,725 --> 00:06:11,566
you see it get a little bit of effect
there. Why is that happening?

79
00:06:11,566 --> 00:06:14,920
That's happening because if you look
at our style, that CSS.

80
00:06:14,920 --> 00:06:20,200
When we have a class of active,
I just change the background,

81
00:06:20,200 --> 00:06:23,950
I change the cursor. You have to change it
to... I didn't even know you had to

82
00:06:23,950 --> 00:06:28,400
vendor prefix cursor, it's been a
while since I've seen that.

83
00:06:28,400 --> 00:06:33,000
And then transform the scale up to one, so
it goes from 98 percent to one.

84
00:06:33,000 --> 00:06:36,830
It just gives you a little bit of a cool
effect that goes in and out.

85
00:06:36,830 --> 00:06:41,820
Now let's think about how this is going to
work. When I click down here and I drag 20

86
00:06:41,820 --> 00:06:46,810
pixels to the left or 20 pixels to the
right, we need to know where that anchor

87
00:06:46,810 --> 00:06:52,210
point is when I scroll to the left or to
the right. Because as many times as I move

88
00:06:52,210 --> 00:06:59,360
around, until I unclick or mouse up, we
need to know where that initial click down

89
00:06:59,360 --> 00:07:04,170
was. And that's what that start x variable
is for, where we created right here.

90
00:07:04,170 --> 00:07:07,950
So when someone clicks down, before they
start moving to the left or to the right,

91
00:07:07,950 --> 00:07:12,340
we need to record where they did that
initial click down. That's going to happen

92
00:07:12,340 --> 00:07:17,460
in our mouse down here. And we're going to
go up to our function and past the event.

93
00:07:17,460 --> 00:07:21,440
Now, if we're to console log that event,
let's see what information we get on

94
00:07:21,440 --> 00:07:25,240
there. Yeah, I got the mouse event,
I got all kinds of information.

95
00:07:25,240 --> 00:07:31,730
Client x, client y, etc., etc. One way to
tell where we clicked inside of it and

96
00:07:31,730 --> 00:07:38,970
we've done a couple of different ways in
this series is to console log e.page x.

97
00:07:38,970 --> 00:07:43,780
And then it's going to tell us exactly
three, nine, six. It's telling us exactly

98
00:07:43,780 --> 00:07:50,440
what the x coordinates on the actual page.
However, if there was some margin in

99
00:07:50,440 --> 00:07:55,680
between this item here, like margin 50 px.
If we really brought it out,

100
00:07:55,680 --> 00:08:00,000
then that would be off. We need to know
where did they click inside of this thing,

101
00:08:00,000 --> 00:08:04,610
not on the page. So we just take
start x is equal to e.page x,

102
00:08:04,610 --> 00:08:10,580
but then we'll attract the slider.offset
left and that will just offset it.

103
00:08:10,580 --> 00:08:16,180
If there's 50 px of margin in between the
page and the item that we care about,

104
00:08:16,180 --> 00:08:21,480
then subtracting it will handle that
offset for us. So then we can console log

105
00:08:21,480 --> 00:08:26,690
start x and if I click here, we should
get a really low number, 18.

106
00:08:26,690 --> 00:08:30,670
If I click over here, we'll get a high
number, good. Then,

107
00:08:30,670 --> 00:08:35,000
what's important about that is when we
move our mouse, we should be able to

108
00:08:35,000 --> 00:08:42,500
console log start x over and over. See
it's 645 regardless of where I'm moving my

109
00:08:42,500 --> 00:08:46,180
actual cursor here, that's pretty cool.
And then when I let go,

110
00:08:46,180 --> 00:08:51,090
we don't really care about it. We click
again, now it's 547, we care about that.

111
00:08:51,090 --> 00:08:55,820
The other thing we need to log at
the time of click is the scroll.

112
00:08:55,820 --> 00:08:59,860
Because let's say I'm scrolled 200
pixels in and then I want to

113
00:08:59,860 --> 00:09:04,798
scroll to the left and to the right of
this div. Then we need to figure out

114
00:09:04,798 --> 00:09:09,563
where the initial scroll was when we
started it. And that's what this other

115
00:09:09,563 --> 00:09:11,872
variable is for, which is scroll left.

116
00:09:11,872 --> 00:09:18,485
So we'll take this, we'll say scroll
left is equal to slider.scroll left.

117
00:09:18,485 --> 00:09:21,770
And the reason why we're going to
keep that in a variable is because it's

118
00:09:21,770 --> 00:09:25,280
going to move. If I go to the
answer here, it's going to move,

119
00:09:25,280 --> 00:09:28,980
but we always need to go back
to that initial state when it started,

120
00:09:28,980 --> 00:09:33,800
when you did that first click down. We got
our start x and we got our scroll left,

121
00:09:33,800 --> 00:09:39,280
we can take these console logs out of
here. Good. Now we'll go down to our mouse

122
00:09:39,280 --> 00:09:46,000
move and start doing the work. So first of
all, I'd like to take the event and then

123
00:09:46,000 --> 00:09:51,940
just call an e.prevent default on it. And
that will stop any selecting of text

124
00:09:51,940 --> 00:09:56,560
that's inside of there or any of the
sliding to the left or any other weird

125
00:09:56,560 --> 00:09:59,670
stuff that the browser might think you're
actually trying to select some text,

126
00:09:59,670 --> 00:10:06,830
that will stop it for us. Then what we
need to do is figure out where the cursor

127
00:10:06,830 --> 00:10:10,990
is when they moved it. We already know
where the cursor is when they initially

128
00:10:10,990 --> 00:10:15,190
clicked down, but we want to know where
the cursor is when they move it to the

129
00:10:15,190 --> 00:10:24,350
left and to the right. So we'll say const
x is equal to e.page x minus slider.offset

130
00:10:24,350 --> 00:10:28,550
left. That's the exact same code that we
just used up here. Here we're using it to

131
00:10:28,550 --> 00:10:31,837
say where did they initially click and
here we're going to recalculate every

132
00:10:31,837 --> 00:10:39,446
single time that we move the mouse. So now
if we just console.log x as well as what

133
00:10:39,446 --> 00:10:45,257
was that other one called here? Start x.
And a little tip here, if you want to know

134
00:10:45,340 --> 00:10:50,440
what those variables are, just throw them
in an object and you'll see the values.

135
00:10:50,440 --> 00:10:56,280
Now, when I click in the middle here, you
see that the x value is changing and the

136
00:10:56,280 --> 00:11:03,670
start x is not changing at all. So we can
simply then take that and I'm going to

137
00:11:03,670 --> 00:11:11,570
call that the wok. Const wok is equal to,
we'll take the x value and subtract the

138
00:11:11,570 --> 00:11:17,530
start x. And this is going to tell us how
far have we deviated from that initial

139
00:11:17,530 --> 00:11:24,150
space. Console log wok, get rid of that
initial console log and now we're seeing,

140
00:11:24,150 --> 00:11:29,380
ah, look at that! So I'm going to click
here. I'm going to move 20 pixels to the

141
00:11:29,380 --> 00:11:34,620
right. So we've gone 20 pixels to the
right. Then I'm going to go back and 20

142
00:11:34,620 --> 00:11:38,570
pixels to the left gives me negative. So
it's telling us, how far have we deviated

143
00:11:38,570 --> 00:11:42,510
from that initial point, which we could
put like a red dot there when you clicked,

144
00:11:42,510 --> 00:11:47,301
because then you can see exactly how far
to the left and to the right you are

145
00:11:47,301 --> 00:11:53,030
working. So next up, what we need to
actually do is change this div here to

146
00:11:53,030 --> 00:11:58,980
scroll and we do that with a scroll left
property. So we'll say slider.scroll left

147
00:11:58,980 --> 00:12:02,370
is equal to...now you might think,
okay, we'll just set it to wok and

148
00:12:02,370 --> 00:12:03,730
let's see what that does for us.

149
00:12:09,438 --> 00:12:12,463
It kind of works, but it's really jumpy.

150
00:12:12,463 --> 00:12:16,890
And the problem is that is we're
recalculating the scroll left every single

151
00:12:16,890 --> 00:12:23,330
time. So the reason why we captured the
scroll left value when we did that initial

152
00:12:23,330 --> 00:12:26,870
click is so we could reference it inside
of this function. So we'll take

153
00:12:26,870 --> 00:12:32,410
slider.scroll left, set it to the scroll
left value, which is what we initially

154
00:12:32,410 --> 00:12:36,170
captured, we've put it in a variable
and then we minus the wok value.

155
00:12:36,170 --> 00:12:41,300
We give that a save here and now we should
be able to click and drag beautifully back

156
00:12:41,300 --> 00:12:44,910
and forth. If you feel like this is a lot
of work just to get over,

157
00:12:44,910 --> 00:12:49,570
what you can then do is put this in
parenthesis and then multiply it by like

158
00:12:49,570 --> 00:12:54,180
three or something. So for every pixel
moved, you're gonna scroll the slider

159
00:12:54,180 --> 00:13:01,070
three pixels. There you get a bit of a
nice slider effect as we're going on in

160
00:13:01,070 --> 00:13:07,360
there. So I think that's it for what we've
got going on here, looking pretty good.

161
00:13:07,360 --> 00:13:12,766
It's a simple ISH code, however actually
building this the first time took me

162
00:13:12,766 --> 00:13:16,973
a while to understand. "Oh, you need to
put these variables, you need to capture

163
00:13:16,973 --> 00:13:20,575
them at the time of your mouse down and
then reference them whenever someone

164
00:13:20,575 --> 00:13:25,626
moves the mouse." So hopefully you
enjoyed that. Obviously there's a lot more

165
00:13:25,626 --> 00:13:29,456
to libraries, if you take a look at this
one right here, you can just flick it

166
00:13:29,456 --> 00:13:33,731
and you don't have to worry. It really
gives me appreciation for people who

167
00:13:33,731 --> 00:13:38,813
build bouncy scrolling and inertial
scrolling, you see how like it fades

168
00:13:38,813 --> 00:13:42,902
out at the end. There's a lot of math that
goes into building these different

169
00:13:42,902 --> 00:13:46,961
libraries. But it's really important to
know how they're working under the hood

170
00:13:46,961 --> 00:13:48,947
in case you ever wanted
to build your own.

171
00:13:48,947 --> 00:13:53,360
I should also note that with this mouse
down, mouse leave, mouse up,

172
00:13:53,360 --> 00:13:58,170
mouse move dance that we've done here, you
can also implement your own drag and drop,

173
00:13:58,170 --> 00:14:00,750
so if that's something you're interested
in doing, I would challenge you to do

174
00:14:00,750 --> 00:14:03,003
that. Thanks a lot, I'll see you tomorrow.

175
00:14:03,564 --> 00:14:06,854
♪ [music] ♪
