1
00:00:00,000 --> 00:00:00,033
Edited at https://subtitletools.com

2
00:00:00,307 --> 00:00:03,307
♪ [music] ♪

3
00:00:08,070 --> 00:00:12,550
Today's exercise is, I think, a bit of a
tough one and I really want you to give it

4
00:00:12,550 --> 00:00:17,140
a shot on your own. Let me explain what it
does and then I'll give you a shot to go

5
00:00:17,140 --> 00:00:21,240
and do it on your own. The end code
is not actually all that complicated.

6
00:00:21,240 --> 00:00:25,490
I found that it was a little bit tough for
me to come around to this idea at first

7
00:00:25,490 --> 00:00:29,190
though. So, here's how it works. You click
a checkbox, you hold down your shift key,

8
00:00:29,190 --> 00:00:32,900
you click another one, and all the
checkboxes in between the first one and

9
00:00:32,900 --> 00:00:37,440
the second one that you clicked will then
be checked. This works top to bottom,

10
00:00:37,440 --> 00:00:41,400
but also bottom to top. So, if I
click on this one, hold down shift,

11
00:00:41,400 --> 00:00:47,880
click on here, it's going to go bottom to
top. So, it goes all ways depending on

12
00:00:47,880 --> 00:00:51,240
what you're working on. You can go either
way. And this is a fairly common thing

13
00:00:51,240 --> 00:00:55,980
that you're going to see in applications
such as Gmail, where you want to select a

14
00:00:55,980 --> 00:01:00,452
whole bunch of emails and delete them
at once. Let's take a quick look at our

15
00:01:00,452 --> 00:01:05,280
HTML here. We've got our input with the
type of checkbox and a paragraph type.

16
00:01:05,280 --> 00:01:10,120
Probably a label would be more suited
for something like that, but whatever.

17
00:01:10,120 --> 00:01:13,490
We are working with it. Then we've
got a script tag here. And by the way,

18
00:01:13,490 --> 00:01:16,960
if you're wondering why I always
indent my script tags so far to the left,

19
00:01:16,960 --> 00:01:20,090
it's just because I need the
horizontal space. If it bugs you,

20
00:01:20,090 --> 00:01:25,550
I'm sorry, but I need to make sure
my code fits on the screen. Now,

21
00:01:25,550 --> 00:01:29,916
give it a shot yourself and I'll see you
back here, hopefully triumphant,

22
00:01:29,916 --> 00:01:34,526
maybe not, and we'll go through it
together. So, here we go. Well, first

23
00:01:34,526 --> 00:01:38,590
thing we need to do is select every single
one of the checkboxes because we need to

24
00:01:38,590 --> 00:01:44,070
listen for when they get checked.
So, we'll say, "const checkboxes =

25
00:01:44,070 --> 00:01:53,630
document.querySelectorAll." And we want
to grab ".inbox" and we want to grab the

26
00:01:53,630 --> 00:01:58,156
inputs. I have a type of checkbox that
I'll probably input on there as well.

27
00:01:58,156 --> 00:02:04,420
Good. Let's just double check that we got
all those checkboxes, "querySelectorAll."

28
00:02:04,420 --> 00:02:09,644
You have to spell it right,
"querySelectorAll." There we go.

29
00:02:09,644 --> 00:02:10,991
Input, input, input. Okay. Good.

30
00:02:10,991 --> 00:02:13,600
I've got all of the inputs
that I'm working with here.

31
00:02:13,600 --> 00:02:17,860
Now we need to listen for when
one of them gets clicked or changed.

32
00:02:17,860 --> 00:02:23,340
So, we will take the checkboxes,
and we will loop over each one.

33
00:02:23,340 --> 00:02:29,390
Checkbox. And on that we are going to tick
the checkbox and "addEventListener."

34
00:02:29,390 --> 00:02:33,660
We are going to listen for a click. I
initially thought that you had to listen

35
00:02:33,660 --> 00:02:38,440
for the change event, but apparently the
click event will fire even if you use your

36
00:02:38,440 --> 00:02:43,480
keyboard,.which is really handy to know.
We've got our "addEventListener,"

37
00:02:43,480 --> 00:02:48,090
and when someone clicks it, we are going
to run a function called "handleCheck."

38
00:02:48,090 --> 00:02:54,951
Now let's go up here and make that
function. We'll have this event and we'll

39
00:02:54,951 --> 00:03:02,945
just console log the event. Click.
All right. Click. Click. Click.

40
00:03:02,945 --> 00:03:05,603
We're getting the
information for every single one.

41
00:03:05,603 --> 00:03:11,990
Now, this is where the hard
part starts to happen, where we need

42
00:03:11,990 --> 00:03:16,830
to log, when I check my first one, we need
to put that into a variable. Because when

43
00:03:16,830 --> 00:03:22,400
you check your second one and you're
holding down shift, we need to know what

44
00:03:22,400 --> 00:03:26,365
that last one was. So, we're going to
make a variable up here called "let

45
00:03:26,365 --> 00:03:31,505
lastChecked." And the reason why I'm
using let is because that's going to be

46
00:03:31,505 --> 00:03:38,591
reassigned constantly. And then inside of
here, sort of the last thing that we're

47
00:03:38,591 --> 00:03:44,820
going to do is we'll say "lastChecked =
this." That's like the last thing we're

48
00:03:44,820 --> 00:03:49,235
going to do but we'll put it on there.
Now, when I click one and we type in

49
00:03:50,780 --> 00:03:55,070
"lastChecked," we have a reference
to the input that was last checked.

50
00:03:55,070 --> 00:04:03,290
Now up here, a couple of things we need to
do. We need to check if they had the shift

51
00:04:03,290 --> 00:04:10,410
key down. So, I'm going to say, "if
e.shiftKey." If the event ".shiftKey" is

52
00:04:10,410 --> 00:04:14,560
there, that means they were holding
it down. Then we'll go ahead and write our

53
00:04:14,560 --> 00:04:17,890
code. However, the other thing
we need to do is when I uncheck,

54
00:04:17,890 --> 00:04:23,460
it will also trigger "handleCheck." So, we
need to make sure that check if they had a

55
00:04:23,460 --> 00:04:31,950
shift key down and check that they
are checking it. So, not unchecking it.

56
00:04:31,950 --> 00:04:34,580
Right? Because you don't care if they're
unchecking it. You want to check if they

57
00:04:34,580 --> 00:04:38,690
are uncheck... Okay, let's stop saying
the word checked. Let's gut it.

58
00:04:38,690 --> 00:04:44,930
And "this.checked." Like it's taboo.
Stop saying it. So if the shift key is

59
00:04:44,930 --> 00:04:53,751
down and they are checking the box, then
we can go ahead and do what we please.

60
00:04:53,751 --> 00:04:57,251
And inside of here, now, this is where our

61
00:04:57,251 --> 00:05:04,020
sausage gets made. What we are going to do
here, is we are going to loop through

62
00:05:04,020 --> 00:05:08,370
every single checkbox. Every time this
happens, we are going to loop over every

63
00:05:08,370 --> 00:05:13,940
single checkbox. And what we're going to
do is we're going to look for the first

64
00:05:13,940 --> 00:05:19,900
one that was checked, and then I check
down here. What's going to happen is,

65
00:05:19,900 --> 00:05:24,063
we're going to say, "Oh, you're not.
You're not the first one. Oh, you are the

66
00:05:24,063 --> 00:05:28,550
first one. Okay, good." Then go to the
next one, check it. Next one, check it.

67
00:05:28,550 --> 00:05:32,540
Next one, check it. This one, "Oh,
you're the last one that's checked.

68
00:05:32,540 --> 00:05:38,180
Stop it." And then these two won't be
checked. So, rather than try and figure

69
00:05:38,180 --> 00:05:44,730
out where in the dom they are and trying
to figure out like which elements are

70
00:05:44,730 --> 00:05:51,110
in-between it, and finding parents and...
I find that's really fragile a way to do

71
00:05:51,110 --> 00:05:57,240
it because you're depending on having the
HTML set just so, and then if someone else

72
00:05:57,240 --> 00:06:01,670
comes along and changes the
HTML a little bit, it will just break.

73
00:06:01,670 --> 00:06:06,450
So, we are going to loop over every single
checkbox. We're going to create a

74
00:06:06,450 --> 00:06:11,740
variable called in-between. And what
in-between will do is we'll loop over this

75
00:06:11,740 --> 00:06:15,890
one and I'll say in-between false. We'll
loop over this one, in-between false.

76
00:06:15,890 --> 00:06:19,290
We'll loop over this one and it's going to
say, "Okay, this is where we started."

77
00:06:19,290 --> 00:06:24,120
We are now in the area which we
wish to check, so let's check it.

78
00:06:24,120 --> 00:06:28,120
Check it. Check it. Check it. Because the
in-between variable is going to be set to

79
00:06:28,120 --> 00:06:32,620
true when we are here. And then when we
hit our last one, we are going to say

80
00:06:32,620 --> 00:06:37,270
in-between is false, because we are done
and we're no longer going to check any

81
00:06:37,270 --> 00:06:42,730
others. So, this will probably take a
couple of read overs, but let's get it.

82
00:06:42,730 --> 00:06:49,740
So, we will go up here before we do the
f statement, we'll say, "let inBetween =,"

83
00:06:49,740 --> 00:06:55,310
capital B on that in-between,
"false." So, we're not in-between.

84
00:06:55,310 --> 00:07:04,530
And then here we are going to
loop over every single checkbox.

85
00:07:04,530 --> 00:07:13,920
Say, "checkboxes.forEach" checkbox,
and let's just console log checkbox.

86
00:07:13,920 --> 00:07:21,002
See where we're at. So, if I click
one, nothing. And now I'm going to

87
00:07:21,002 --> 00:07:25,018
hold down my shift key and
click another one. Okay, so when that

88
00:07:25,018 --> 00:07:30,110
happened, I get every single checkbox
along the way. Now we need to figure out,

89
00:07:30,110 --> 00:07:35,710
as we are looping for this, we've got to
set this in-between variable to true.

90
00:07:35,710 --> 00:07:45,336
And the way that we are going to do that
is we say "if checkbox is equal to this or

91
00:07:45,336 --> 00:07:56,190
checkbox is equal to last checked, then
in-between is..." We normally would say

92
00:07:56,190 --> 00:07:59,370
in-between is equal to true, but since we
wanted to go both ways, we say in-between

93
00:07:59,370 --> 00:08:05,390
to the opposite of itself. What? Okay,
let's go through this. One sec. If the

94
00:08:05,390 --> 00:08:13,990
checkbox is equal to this, so here we go,
check it. Let me do it backwards this way

95
00:08:13,990 --> 00:08:18,200
so we can understand. So, check this
one. I hold down shift and I click on

96
00:08:18,200 --> 00:08:22,850
"check one item." And what's going
to happen is we're going to go through

97
00:08:22,850 --> 00:08:26,440
this one. It's going to say, "Is that
in-between? No." It's going to go through

98
00:08:26,440 --> 00:08:30,920
this one and say, "Is the checkbox
equal to this? And what is this?"

99
00:08:30,920 --> 00:08:34,820
This is going to be the one that got
checked. And that's the checkbox.

100
00:08:34,820 --> 00:08:39,890
This one is going to be equal to the same
one that we are currently looping over.

101
00:08:39,890 --> 00:08:44,500
So, that going to be true. So, we're
going to turn on that in-between variable.

102
00:08:44,500 --> 00:08:50,460
And then the other way around it is if we
go this way, last checked, and then we go

103
00:08:50,460 --> 00:08:54,840
down to good luck and click it again. It's
going to still go from top to bottom but

104
00:08:54,840 --> 00:08:59,750
it's going to say, "If the checkbox is the
last checked one," mean that this is the

105
00:08:59,750 --> 00:09:04,200
currently checked one, but "check
one item" is the last checked one.

106
00:09:04,200 --> 00:09:07,740
So, I feel like I'm saying "checked"
a lot, but we got this. We got this.

107
00:09:07,740 --> 00:09:17,570
So in-between, so you could console log
starting to check them in-between.

108
00:09:17,570 --> 00:09:24,270
Check there, check there. And what happens
is, here we go, one, we get to this one

109
00:09:24,270 --> 00:09:27,058
and it says, "Okay. Good. Now we're
starting, starting to check them

110
00:09:27,058 --> 00:09:31,164
in-between. Down, down,
down, down, and then down.

111
00:09:31,164 --> 00:09:32,757
And then once we hit this one,

112
00:09:32,757 --> 00:09:37,200
that's the last one that we checked. So,
it console logs it again. That means we're

113
00:09:37,200 --> 00:09:41,530
finished, which is why we
do this opposite thing. So, if it's true,

114
00:09:41,530 --> 00:09:45,900
it's false. If it's false, it's true. And
then we hit these last two, which aren't

115
00:09:45,900 --> 00:09:51,120
going to be. So, we can say down
here we have another "if" statement that's

116
00:09:51,120 --> 00:10:05,890
"if inBetween," capital B, "then
checkbox.checked equals true."

117
00:10:05,890 --> 00:10:12,080
Check it. Hold down shift, check another
one. Bam. Nailed it. Okay, let's see

118
00:10:12,080 --> 00:10:16,680
what's going on there.
We set a flag variable called in-between

119
00:10:16,680 --> 00:10:21,630
that is set to false. Once we hit that
first one, it's going to be true,

120
00:10:21,630 --> 00:10:26,930
which is going to check if it's on and
then we're going to programatically set it

121
00:10:26,930 --> 00:10:31,290
to checked with Javascript. And we're
going to do that for every single one unti

122
00:10:31,290 --> 00:10:36,186
we hit that last one, which our flag
variable called in-between, gets set to

123
00:10:36,186 --> 00:10:42,560
false and it will no longer run it
for these first two or for these last two.

124
00:10:42,560 --> 00:10:47,900
And that works both ways from bottom to
top because we did this little diddy right

125
00:10:47,900 --> 00:10:52,000
here where we checked if it's equal to
this, which is the one we clicked,

126
00:10:52,000 --> 00:10:56,560
or if it's the one that we last checked.
So, that's it. It's actually fairly

127
00:10:56,560 --> 00:11:01,050
simple now that we have it. It's not a lot
of code. It's just a little bit hard to

128
00:11:01,050 --> 00:11:05,530
understand what's going on. So, maybe
go through that a couple more times.

129
00:11:05,530 --> 00:11:08,850
Go do it yourself from scratch so you
totally understand it. Other than that,

130
00:11:08,850 --> 00:11:11,550
I hope you enjoyed it. Let me
know what you think of that one.

131
00:11:11,550 --> 00:11:12,872
See you tomorrow.

132
00:11:14,345 --> 00:11:17,692
♪ [music] ♪
